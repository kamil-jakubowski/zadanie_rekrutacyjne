<?php

namespace App\Tests\Unit\Cart\Application\Command\CreateCart;

use App\Cart\Application\Command\CreateCart\CreateCartCommand;
use App\Cart\Application\Command\CreateCart\CreateCartHandler;
use App\Cart\Domain\CartRepositoryInterface;
use App\Tests\Helper\ProductTestHelper;
use PHPUnit\Framework\TestCase;

class CreateCartHandlerTest extends TestCase
{
    use ProductTestHelper;

    public function testCreationShouldSuccess(): void
    {
        // given
        $commandSpy = new class() extends CreateCartCommand {

            public bool $visited = false;

            public function setNewResourceUuid(string $uuid): void
            {
                $this->visited = true;
                parent::setNewResourceUuid($uuid); // TODO: Change the autogenerated stub
            }
        };
        $cartRepositoryMock = $this->createMock(CartRepositoryInterface::class);
        $handler = new CreateCartHandler($cartRepositoryMock);

        // then
        $cartRepositoryMock->expects($this->once())
            ->method('createNewCart');

        // when
        $handler($commandSpy);

        // then
        $this->assertTrue($commandSpy->visited);
    }
}
